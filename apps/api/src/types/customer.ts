// src/types/customer.ts
export enum CustomerType {
  NEW = 'new',
  OLD = 'old',
  REGISTERED = 'registered',
}

export interface Customer {
  id: number;
  mobile: string;
  name: string;
  type: CustomerType;
  user_label?: string | null;
  district?: string | null;
  app_name?: string | null;
  follow_up_person?: string | null;
  whether_apply: boolean;
  app_time?: string | null; // ISO string
  allocation_time?: string | null; // ISO string
  latest_follow_up_time?: string | null; // ISO string
  follow_up_results?: string | null;
  desc_follow_up?: string | null;
  whether_assigned: boolean;
  prev_repayment_time?: string | null; // ISO string
  telemarketer_id?: number | null;
  created_at: string; // Auto-generated by Supabase
  updated_at: string; // Auto-generated by Supabase
}

// Types pour les op√©rations CRUD
export type CreateCustomerInput = Omit<
  Customer,
  'id' | 'created_at' | 'updated_at'
>;
export type UpdateCustomerInput = Partial<
  Omit<Customer, 'id' | 'created_at' | 'mobile'>
>;

// Type pour les relations
export type CustomerWithRelations = Customer & {
  telemarketer?: {
    id: number;
    name: string;
    work_number: string;
  };
  loans?: Array<{
    id: number;
    loan_number: string;
    loan_status: string;
  }>;
};
