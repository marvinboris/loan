// src/types/repayment.ts
export enum TradingStatus {
  PENDING = 'pending',
  SUCCESS = 'success',
  FAILED = 'failed',
}

export interface Repayment {
  id: number;
  repayment_number: string;
  loan_id: number;
  repayment_amount: number;
  real_amount?: number | null;
  trading_status: TradingStatus;
  repayment_code_va_link?: string | null;
  payment_channel?: string | null;
  creation_time: string; // ISO string
  payback_time?: string | null; // ISO string
  payment_company_serial_number?: string | null;
  collector_id?: number | null;
  latest_follow_up_time?: string | null; // ISO string
  follow_up_results?: string | null;
  desc_follow_up?: string | null;
  whether_assigned: boolean;
  created_at: string; // Auto-generated by Supabase
  updated_at: string; // Auto-generated by Supabase
}

// Types pour les op√©rations CRUD
export type CreateRepaymentInput = Omit<
  Repayment,
  'id' | 'created_at' | 'updated_at'
>;
export type UpdateRepaymentInput = Partial<
  Omit<Repayment, 'id' | 'created_at' | 'repayment_number' | 'loan_id'>
>;

// Types pour les relations
export type RepaymentWithRelations = Repayment & {
  loan?: {
    id: number;
    loan_number: string;
    customer?: {
      id: number;
      name: string;
      mobile: string;
    };
  };
  collector?: {
    id: number;
    name: string;
    work_number: string;
  };
};

// Type pour les statistiques de remboursement
export type RepaymentStats = {
  total_amount: number;
  success_rate: number;
  pending_amount: number;
  failed_amount: number;
  average_repayment_time: number; // En heures
};
